#ifndef ENGINE_IMPL_FACTORY_FACTORY_RANDOM_HPP
#define ENGINE_IMPL_FACTORY_FACTORY_RANDOM_HPP

#include <cstdint>
#include <openssl/evp.h>

namespace Factory {

/**
 * \brief Abstract base class for a factory to create a random number generator
 *
 * This class defines an interface for a factory to create a random number
 * generator. Implementations of this class provide methods for generating
 * random bytes, retrieving the status of the generator, and setting the
 * generator's seed.
 */
class FactoryRandom {
public:
  /**
   * \brief Cleanup the random number generator
   */
  virtual void Cleanup() noexcept = 0;

  /**
   * \brief Generate random bytes
   *
   * \param buf Pointer to the buffer to store the generated bytes
   * \param num Number of bytes to generate
   *
   * \return 1 on success, 0 on failure
   */
  virtual int RandomBytes(unsigned char *buf, int num) noexcept = 0;

  /**
   * \brief Get the status of the random number generator
   *
   * \return 1 if the generator is working properly, 0 otherwise
   */
  virtual int RandomStatus() noexcept = 0;

  /**
   * \brief Set the seed of the random number generator
   *
   * \return 1 on success, 0 on failure
   */
  virtual int SetSeed() noexcept = 0;
};

} // namespace Factory

#endif // ENGINE_IMPL_FACTORY_FACTORY_RANDOM_HPP
